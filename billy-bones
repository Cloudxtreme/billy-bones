#!/usr/bin/env ruby
# rubocop:disable Style/FileName
# Put launch code here
$LOAD_PATH << 'lib'

require 'sinatra' # Has to be here for traditional approach
require 'config'
require 'helpers'
require 'yaml'

# Bills

get '/' do
  @bills = Bill.all(order: [:date.desc])
  haml :bills
end

get '/bills/new' do
  @bill = Bill.new
  @cat_id = (params[:category].to_i) || 0
  @action = 'new'
  haml :bill_new do
    haml :_bill_form
  end
end

get '/bills/:id/edit' do
  @bill = Bill.get(params[:id])
  @cat_id = @bill.category.id
  @action = "#{@bill.id}"
  haml :bill_edit do
    haml :_bill_form
  end
end

post '/bills/new' do
  @bill = Bill.new
  Helpers.update_params(@bill, params)
  redirect to("/category/#{params[:category_id]}")
end

post '/bills/:id' do |bill_id|
  @bill = Bill.get(bill_id)
  Helpers.update_params(@bill, params)
  redirect to("/category/#{@bill.category_id}")
end

# Categories

get '/category/new' do
  @category = Category.new
  @action = 'new'
  haml :category_new do
    haml :_category_form
  end
end

post '/category/new' do
  @category = Category.new
  Helpers.update_params(@category, params)
  redirect to("/category/#{@category.id}")
end

post '/category/:id' do |cat_id|
  @category = Category.get(cat_id)
  Helpers.update_params(@category, params)
  redirect to("/category/#{@category.id}")
end

get '/category/:id' do |cat_id|
  @category = Category.get(cat_id)
  @bills = @category.bills
  haml :category_show do
    haml :bills
  end
end

get '/category/:id/edit' do |cat_id|
  @category = Category.get(cat_id)
  @action = "#{@category.id}"
  haml :category_edit do
    haml :_category_form
  end
end
# rubocop:enable Style/FileName
